CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

CREATE TABLE "FhirVersion" (
    id integer NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    code character varying(128) NOT NULL,
    CONSTRAINT "PK_FhirVersion" PRIMARY KEY (id)
);

CREATE TABLE "HttpStatusCode" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    number integer NOT NULL,
    code character varying(128) NOT NULL,
    CONSTRAINT "PK_HttpStatusCode" PRIMARY KEY (id)
);

CREATE TABLE "Method" (
    id integer NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    code character varying(128) NOT NULL,
    CONSTRAINT "PK_Method" PRIMARY KEY (id)
);

CREATE TABLE "ResourceType" (
    id integer NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    code character varying(50) NOT NULL,
    CONSTRAINT "PK_ResourceType" PRIMARY KEY (id)
);

CREATE TABLE "SearchParamType" (
    id integer NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    code character varying(128) NOT NULL,
    CONSTRAINT "PK_SearchParamType" PRIMARY KEY (id)
);

CREATE TABLE "ServiceBaseUrl" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    url character varying(450) NOT NULL,
    is_primary boolean NOT NULL,
    fhirversion_id integer NOT NULL,
    CONSTRAINT "PK_ServiceBaseUrl" PRIMARY KEY (id)
);

CREATE TABLE "ResourceStore" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    resource_id character varying(128) NOT NULL,
    contained_id character varying(128) NULL,
    version_id integer NOT NULL,
    is_deleted boolean NOT NULL,
    is_current boolean NOT NULL,
    last_updated timestamp without time zone NOT NULL,
    resource_blob bytea NULL,
    resourcetype_id integer NOT NULL,
    fhirversion_id integer NOT NULL,
    method_id integer NOT NULL,
    httpstatuscode_id integer NOT NULL,
    CONSTRAINT "PK_ResourceStore" PRIMARY KEY (id),
    CONSTRAINT "FK_ResourceStore_FhirVersion_fhirversion_id" FOREIGN KEY (fhirversion_id) REFERENCES "FhirVersion" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_ResourceStore_HttpStatusCode_httpstatuscode_id" FOREIGN KEY (httpstatuscode_id) REFERENCES "HttpStatusCode" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_ResourceStore_Method_method_id" FOREIGN KEY (method_id) REFERENCES "Method" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_ResourceStore_ResourceType_resourcetype_id" FOREIGN KEY (resourcetype_id) REFERENCES "ResourceType" (id) ON DELETE CASCADE
);

CREATE TABLE "SearchParameter" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    name character varying(128) NOT NULL,
    description text NULL,
    searchparamtype_id integer NOT NULL,
    url character varying(450) NULL,
    fhir_path text NULL,
    fhirversion_id integer NOT NULL,
    CONSTRAINT "PK_SearchParameter" PRIMARY KEY (id),
    CONSTRAINT "FK_SearchParameter_FhirVersion_fhirversion_id" FOREIGN KEY (fhirversion_id) REFERENCES "FhirVersion" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_SearchParameter_SearchParamType_searchparamtype_id" FOREIGN KEY (searchparamtype_id) REFERENCES "SearchParamType" (id) ON DELETE CASCADE
);

CREATE TABLE "IndexDateTime" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    resourcestore_id integer NOT NULL,
    searchparameter_id integer NOT NULL,
    low timestamp without time zone NULL,
    high timestamp without time zone NULL,
    CONSTRAINT "PK_IndexDateTime" PRIMARY KEY (id),
    CONSTRAINT "FK_IndexDateTime_ResourceStore_resourcestore_id" FOREIGN KEY (resourcestore_id) REFERENCES "ResourceStore" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_IndexDateTime_SearchParameter_searchparameter_id" FOREIGN KEY (searchparameter_id) REFERENCES "SearchParameter" (id) ON DELETE CASCADE
);

CREATE TABLE "IndexQuantity" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    resourcestore_id integer NOT NULL,
    searchparameter_id integer NOT NULL,
    comparator integer NULL,
    quantity numeric NULL,
    code character varying(128) NULL,
    system character varying(450) NULL,
    unit character varying(450) NULL,
    comparator_high integer NULL,
    quantity_high numeric NULL,
    code_high character varying(128) NULL,
    system_high character varying(450) NULL,
    unit_high character varying(450) NULL,
    CONSTRAINT "PK_IndexQuantity" PRIMARY KEY (id),
    CONSTRAINT "FK_IndexQuantity_ResourceStore_resourcestore_id" FOREIGN KEY (resourcestore_id) REFERENCES "ResourceStore" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_IndexQuantity_SearchParameter_searchparameter_id" FOREIGN KEY (searchparameter_id) REFERENCES "SearchParameter" (id) ON DELETE CASCADE
);

CREATE TABLE "IndexReference" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    resourcestore_id integer NOT NULL,
    searchparameter_id integer NOT NULL,
    servicebaseurl_id integer NOT NULL,
    resourcetype_id integer NOT NULL,
    resource_id text NOT NULL,
    version_id text NULL,
    canonical_version_id text NULL,
    CONSTRAINT "PK_IndexReference" PRIMARY KEY (id),
    CONSTRAINT "FK_IndexReference_ResourceStore_resourcestore_id" FOREIGN KEY (resourcestore_id) REFERENCES "ResourceStore" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_IndexReference_ResourceType_resourcetype_id" FOREIGN KEY (resourcetype_id) REFERENCES "ResourceType" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_IndexReference_SearchParameter_searchparameter_id" FOREIGN KEY (searchparameter_id) REFERENCES "SearchParameter" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_IndexReference_ServiceBaseUrl_servicebaseurl_id" FOREIGN KEY (servicebaseurl_id) REFERENCES "ServiceBaseUrl" (id) ON DELETE CASCADE
);

CREATE TABLE "IndexString" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    resourcestore_id integer NOT NULL,
    searchparameter_id integer NOT NULL,
    string character varying(450) NULL,
    CONSTRAINT "PK_IndexString" PRIMARY KEY (id),
    CONSTRAINT "FK_IndexString_ResourceStore_resourcestore_id" FOREIGN KEY (resourcestore_id) REFERENCES "ResourceStore" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_IndexString_SearchParameter_searchparameter_id" FOREIGN KEY (searchparameter_id) REFERENCES "SearchParameter" (id) ON DELETE CASCADE
);

CREATE TABLE "IndexToken" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    resourcestore_id integer NOT NULL,
    searchparameter_id integer NOT NULL,
    code character varying(128) NULL,
    system character varying(450) NULL,
    CONSTRAINT "PK_IndexToken" PRIMARY KEY (id),
    CONSTRAINT "FK_IndexToken_ResourceStore_resourcestore_id" FOREIGN KEY (resourcestore_id) REFERENCES "ResourceStore" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_IndexToken_SearchParameter_searchparameter_id" FOREIGN KEY (searchparameter_id) REFERENCES "SearchParameter" (id) ON DELETE CASCADE
);

CREATE TABLE "IndexUri" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    resourcestore_id integer NOT NULL,
    searchparameter_id integer NOT NULL,
    uri character varying(450) NOT NULL,
    CONSTRAINT "PK_IndexUri" PRIMARY KEY (id),
    CONSTRAINT "FK_IndexUri_ResourceStore_resourcestore_id" FOREIGN KEY (resourcestore_id) REFERENCES "ResourceStore" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_IndexUri_SearchParameter_searchparameter_id" FOREIGN KEY (searchparameter_id) REFERENCES "SearchParameter" (id) ON DELETE CASCADE
);

CREATE TABLE "SearchParameterComponent" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    searchparameter_id integer NOT NULL,
    definition character varying(450) NOT NULL,
    expression text NOT NULL,
    CONSTRAINT "PK_SearchParameterComponent" PRIMARY KEY (id),
    CONSTRAINT "FK_SearchParameterComponent_SearchParameter_searchparameter_id" FOREIGN KEY (searchparameter_id) REFERENCES "SearchParameter" (id) ON DELETE CASCADE
);

CREATE TABLE "SearchParameterResourceType" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    searchparameter_id integer NOT NULL,
    resourcetype_id integer NOT NULL,
    CONSTRAINT "PK_SearchParameterResourceType" PRIMARY KEY (id),
    CONSTRAINT "FK_SearchParameterResourceType_ResourceType_resourcetype_id" FOREIGN KEY (resourcetype_id) REFERENCES "ResourceType" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_SearchParameterResourceType_SearchParameter_searchparameter~" FOREIGN KEY (searchparameter_id) REFERENCES "SearchParameter" (id) ON DELETE CASCADE
);

CREATE TABLE "SearchParameterTargetResourceType" (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    searchparameter_id integer NOT NULL,
    resourcetype_id integer NOT NULL,
    CONSTRAINT "PK_SearchParameterTargetResourceType" PRIMARY KEY (id),
    CONSTRAINT "FK_SearchParameterTargetResourceType_ResourceType_resourcetype~" FOREIGN KEY (resourcetype_id) REFERENCES "ResourceType" (id) ON DELETE CASCADE,
    CONSTRAINT "FK_SearchParameterTargetResourceType_SearchParameter_searchpar~" FOREIGN KEY (searchparameter_id) REFERENCES "SearchParameter" (id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX "UniqueIx_HttpStatusCode_number" ON "HttpStatusCode" (number);

CREATE INDEX "Ix_IndexDateTime_High" ON "IndexDateTime" (high);

CREATE INDEX "Ix_IndexDateTime_Low" ON "IndexDateTime" (low);

CREATE INDEX "IX_IndexDateTime_resourcestore_id" ON "IndexDateTime" (resourcestore_id);

CREATE INDEX "IX_IndexDateTime_searchparameter_id" ON "IndexDateTime" (searchparameter_id);

CREATE INDEX "Ix_IndexQuantity_Low" ON "IndexQuantity" (code);

CREATE INDEX "Ix_IndexQuantity_CodeHigh" ON "IndexQuantity" (code_high);

CREATE INDEX "Ix_IndexQuantity_Quantity" ON "IndexQuantity" (quantity);

CREATE INDEX "Ix_IndexQuantity_QuantityHigh" ON "IndexQuantity" (quantity_high);

CREATE INDEX "IX_IndexQuantity_resourcestore_id" ON "IndexQuantity" (resourcestore_id);

CREATE INDEX "IX_IndexQuantity_searchparameter_id" ON "IndexQuantity" (searchparameter_id);

CREATE INDEX "Ix_IndexQuantity_System" ON "IndexQuantity" (system);

CREATE INDEX "Ix_IndexQuantity_SystemHigh" ON "IndexQuantity" (system_high);

CREATE INDEX "Ix_IndexReference_CanonicalVersionId" ON "IndexReference" (canonical_version_id);

CREATE INDEX "Ix_IndexReference_ResourceId" ON "IndexReference" (resource_id);

CREATE INDEX "IX_IndexReference_resourcestore_id" ON "IndexReference" (resourcestore_id);

CREATE INDEX "IX_IndexReference_resourcetype_id" ON "IndexReference" (resourcetype_id);

CREATE INDEX "IX_IndexReference_searchparameter_id" ON "IndexReference" (searchparameter_id);

CREATE INDEX "IX_IndexReference_servicebaseurl_id" ON "IndexReference" (servicebaseurl_id);

CREATE INDEX "Ix_IndexReference_VersionId" ON "IndexReference" (version_id);

CREATE INDEX "IX_IndexString_resourcestore_id" ON "IndexString" (resourcestore_id);

CREATE INDEX "IX_IndexString_searchparameter_id" ON "IndexString" (searchparameter_id);

CREATE INDEX "Ix_IndexString_String" ON "IndexString" (string);

CREATE INDEX "Ix_IndexToken_Code" ON "IndexToken" (code);

CREATE INDEX "IX_IndexToken_resourcestore_id" ON "IndexToken" (resourcestore_id);

CREATE INDEX "IX_IndexToken_searchparameter_id" ON "IndexToken" (searchparameter_id);

CREATE INDEX "Ix_IndexToken_System" ON "IndexToken" (system);

CREATE INDEX "IX_IndexUri_resourcestore_id" ON "IndexUri" (resourcestore_id);

CREATE INDEX "IX_IndexUri_searchparameter_id" ON "IndexUri" (searchparameter_id);

CREATE INDEX "Ix_IndexUri_Uri" ON "IndexUri" (uri);

CREATE INDEX "IX_ResourceStore_httpstatuscode_id" ON "ResourceStore" (httpstatuscode_id);

CREATE INDEX "Ix_ResourceStore_LastUpdated" ON "ResourceStore" (last_updated);

CREATE INDEX "IX_ResourceStore_method_id" ON "ResourceStore" (method_id);

CREATE INDEX "IX_ResourceStore_resourcetype_id" ON "ResourceStore" (resourcetype_id);

CREATE UNIQUE INDEX "UniqueIx_ResourceStore_FhirVer_ResType_ResId_ContId_ResVer" ON "ResourceStore" (fhirversion_id, resourcetype_id, resource_id, contained_id, version_id);

CREATE INDEX "IX_SearchParameter_fhirversion_id" ON "SearchParameter" (fhirversion_id);

CREATE INDEX "Ix_SearchParameter_Url" ON "SearchParameter" (name);

CREATE INDEX "IX_SearchParameter_searchparamtype_id" ON "SearchParameter" (searchparamtype_id);

CREATE INDEX "IX_SearchParameterComponent_searchparameter_id" ON "SearchParameterComponent" (searchparameter_id);

CREATE INDEX "IX_SearchParameterResourceType_resourcetype_id" ON "SearchParameterResourceType" (resourcetype_id);

CREATE INDEX "IX_SearchParameterResourceType_searchparameter_id" ON "SearchParameterResourceType" (searchparameter_id);

CREATE INDEX "IX_SearchParameterTargetResourceType_resourcetype_id" ON "SearchParameterTargetResourceType" (resourcetype_id);

CREATE INDEX "IX_SearchParameterTargetResourceType_searchparameter_id" ON "SearchParameterTargetResourceType" (searchparameter_id);

CREATE UNIQUE INDEX "Ix_ServiceBaseUrl_Url_FhirVersionId" ON "ServiceBaseUrl" (url, fhirversion_id);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20200411021813_First', '3.1.1');

