

using System.Collections.Generic;

//This class was auto code generated by a T4 Template found here: Bug.CodeGeneration.T4Templates.ResourceTypeSupport: ResourceTypeSupport.tt
//
// Last Generated : 13/03/2020 6:05:27 PM
//
namespace Bug.Common.FhirTools
{
  public class ResourceTypeSupport : IResourceTypeSupport
  {
    private Dictionary<string, Bug.Common.Enums.ResourceType> Map;
    public ResourceTypeSupport()
    {
      Map = new Dictionary<string, Enums.ResourceType>();
      Map.Add("Resource", Enums.ResourceType.Resource);
      Map.Add("DomainResource", Enums.ResourceType.DomainResource);
      Map.Add("Account", Enums.ResourceType.Account);
      Map.Add("ActivityDefinition", Enums.ResourceType.ActivityDefinition);
      Map.Add("AdverseEvent", Enums.ResourceType.AdverseEvent);
      Map.Add("AllergyIntolerance", Enums.ResourceType.AllergyIntolerance);
      Map.Add("Appointment", Enums.ResourceType.Appointment);
      Map.Add("AppointmentResponse", Enums.ResourceType.AppointmentResponse);
      Map.Add("AuditEvent", Enums.ResourceType.AuditEvent);
      Map.Add("Basic", Enums.ResourceType.Basic);
      Map.Add("Binary", Enums.ResourceType.Binary);
      Map.Add("BodySite", Enums.ResourceType.BodySite);
      Map.Add("Bundle", Enums.ResourceType.Bundle);
      Map.Add("CapabilityStatement", Enums.ResourceType.CapabilityStatement);
      Map.Add("CarePlan", Enums.ResourceType.CarePlan);
      Map.Add("CareTeam", Enums.ResourceType.CareTeam);
      Map.Add("ChargeItem", Enums.ResourceType.ChargeItem);
      Map.Add("Claim", Enums.ResourceType.Claim);
      Map.Add("ClaimResponse", Enums.ResourceType.ClaimResponse);
      Map.Add("ClinicalImpression", Enums.ResourceType.ClinicalImpression);
      Map.Add("CodeSystem", Enums.ResourceType.CodeSystem);
      Map.Add("Communication", Enums.ResourceType.Communication);
      Map.Add("CommunicationRequest", Enums.ResourceType.CommunicationRequest);
      Map.Add("CompartmentDefinition", Enums.ResourceType.CompartmentDefinition);
      Map.Add("Composition", Enums.ResourceType.Composition);
      Map.Add("ConceptMap", Enums.ResourceType.ConceptMap);
      Map.Add("Condition", Enums.ResourceType.Condition);
      Map.Add("Consent", Enums.ResourceType.Consent);
      Map.Add("Contract", Enums.ResourceType.Contract);
      Map.Add("Coverage", Enums.ResourceType.Coverage);
      Map.Add("DataElement", Enums.ResourceType.DataElement);
      Map.Add("DetectedIssue", Enums.ResourceType.DetectedIssue);
      Map.Add("Device", Enums.ResourceType.Device);
      Map.Add("DeviceComponent", Enums.ResourceType.DeviceComponent);
      Map.Add("DeviceMetric", Enums.ResourceType.DeviceMetric);
      Map.Add("DeviceRequest", Enums.ResourceType.DeviceRequest);
      Map.Add("DeviceUseStatement", Enums.ResourceType.DeviceUseStatement);
      Map.Add("DiagnosticReport", Enums.ResourceType.DiagnosticReport);
      Map.Add("DocumentManifest", Enums.ResourceType.DocumentManifest);
      Map.Add("DocumentReference", Enums.ResourceType.DocumentReference);
      Map.Add("EligibilityRequest", Enums.ResourceType.EligibilityRequest);
      Map.Add("EligibilityResponse", Enums.ResourceType.EligibilityResponse);
      Map.Add("Encounter", Enums.ResourceType.Encounter);
      Map.Add("Endpoint", Enums.ResourceType.Endpoint);
      Map.Add("EnrollmentRequest", Enums.ResourceType.EnrollmentRequest);
      Map.Add("EnrollmentResponse", Enums.ResourceType.EnrollmentResponse);
      Map.Add("EpisodeOfCare", Enums.ResourceType.EpisodeOfCare);
      Map.Add("ExpansionProfile", Enums.ResourceType.ExpansionProfile);
      Map.Add("ExplanationOfBenefit", Enums.ResourceType.ExplanationOfBenefit);
      Map.Add("FamilyMemberHistory", Enums.ResourceType.FamilyMemberHistory);
      Map.Add("Flag", Enums.ResourceType.Flag);
      Map.Add("Goal", Enums.ResourceType.Goal);
      Map.Add("GraphDefinition", Enums.ResourceType.GraphDefinition);
      Map.Add("Group", Enums.ResourceType.Group);
      Map.Add("GuidanceResponse", Enums.ResourceType.GuidanceResponse);
      Map.Add("HealthcareService", Enums.ResourceType.HealthcareService);
      Map.Add("ImagingManifest", Enums.ResourceType.ImagingManifest);
      Map.Add("ImagingStudy", Enums.ResourceType.ImagingStudy);
      Map.Add("Immunization", Enums.ResourceType.Immunization);
      Map.Add("ImmunizationRecommendation", Enums.ResourceType.ImmunizationRecommendation);
      Map.Add("ImplementationGuide", Enums.ResourceType.ImplementationGuide);
      Map.Add("Library", Enums.ResourceType.Library);
      Map.Add("Linkage", Enums.ResourceType.Linkage);
      Map.Add("List", Enums.ResourceType.List);
      Map.Add("Location", Enums.ResourceType.Location);
      Map.Add("Measure", Enums.ResourceType.Measure);
      Map.Add("MeasureReport", Enums.ResourceType.MeasureReport);
      Map.Add("Media", Enums.ResourceType.Media);
      Map.Add("Medication", Enums.ResourceType.Medication);
      Map.Add("MedicationAdministration", Enums.ResourceType.MedicationAdministration);
      Map.Add("MedicationDispense", Enums.ResourceType.MedicationDispense);
      Map.Add("MedicationRequest", Enums.ResourceType.MedicationRequest);
      Map.Add("MedicationStatement", Enums.ResourceType.MedicationStatement);
      Map.Add("MessageDefinition", Enums.ResourceType.MessageDefinition);
      Map.Add("MessageHeader", Enums.ResourceType.MessageHeader);
      Map.Add("NamingSystem", Enums.ResourceType.NamingSystem);
      Map.Add("NutritionOrder", Enums.ResourceType.NutritionOrder);
      Map.Add("Observation", Enums.ResourceType.Observation);
      Map.Add("OperationDefinition", Enums.ResourceType.OperationDefinition);
      Map.Add("OperationOutcome", Enums.ResourceType.OperationOutcome);
      Map.Add("Organization", Enums.ResourceType.Organization);
      Map.Add("Parameters", Enums.ResourceType.Parameters);
      Map.Add("Patient", Enums.ResourceType.Patient);
      Map.Add("PaymentNotice", Enums.ResourceType.PaymentNotice);
      Map.Add("PaymentReconciliation", Enums.ResourceType.PaymentReconciliation);
      Map.Add("Person", Enums.ResourceType.Person);
      Map.Add("PlanDefinition", Enums.ResourceType.PlanDefinition);
      Map.Add("Practitioner", Enums.ResourceType.Practitioner);
      Map.Add("PractitionerRole", Enums.ResourceType.PractitionerRole);
      Map.Add("Procedure", Enums.ResourceType.Procedure);
      Map.Add("ProcedureRequest", Enums.ResourceType.ProcedureRequest);
      Map.Add("ProcessRequest", Enums.ResourceType.ProcessRequest);
      Map.Add("ProcessResponse", Enums.ResourceType.ProcessResponse);
      Map.Add("Provenance", Enums.ResourceType.Provenance);
      Map.Add("Questionnaire", Enums.ResourceType.Questionnaire);
      Map.Add("QuestionnaireResponse", Enums.ResourceType.QuestionnaireResponse);
      Map.Add("ReferralRequest", Enums.ResourceType.ReferralRequest);
      Map.Add("RelatedPerson", Enums.ResourceType.RelatedPerson);
      Map.Add("RequestGroup", Enums.ResourceType.RequestGroup);
      Map.Add("ResearchStudy", Enums.ResourceType.ResearchStudy);
      Map.Add("ResearchSubject", Enums.ResourceType.ResearchSubject);
      Map.Add("RiskAssessment", Enums.ResourceType.RiskAssessment);
      Map.Add("Schedule", Enums.ResourceType.Schedule);
      Map.Add("SearchParameter", Enums.ResourceType.SearchParameter);
      Map.Add("Sequence", Enums.ResourceType.Sequence);
      Map.Add("ServiceDefinition", Enums.ResourceType.ServiceDefinition);
      Map.Add("Slot", Enums.ResourceType.Slot);
      Map.Add("Specimen", Enums.ResourceType.Specimen);
      Map.Add("StructureDefinition", Enums.ResourceType.StructureDefinition);
      Map.Add("StructureMap", Enums.ResourceType.StructureMap);
      Map.Add("Subscription", Enums.ResourceType.Subscription);
      Map.Add("Substance", Enums.ResourceType.Substance);
      Map.Add("SupplyDelivery", Enums.ResourceType.SupplyDelivery);
      Map.Add("SupplyRequest", Enums.ResourceType.SupplyRequest);
      Map.Add("Task", Enums.ResourceType.Task);
      Map.Add("TestReport", Enums.ResourceType.TestReport);
      Map.Add("TestScript", Enums.ResourceType.TestScript);
      Map.Add("ValueSet", Enums.ResourceType.ValueSet);
      Map.Add("VisionPrescription", Enums.ResourceType.VisionPrescription);
      Map.Add("BiologicallyDerivedProduct", Enums.ResourceType.BiologicallyDerivedProduct);
      Map.Add("BodyStructure", Enums.ResourceType.BodyStructure);
      Map.Add("CatalogEntry", Enums.ResourceType.CatalogEntry);
      Map.Add("ChargeItemDefinition", Enums.ResourceType.ChargeItemDefinition);
      Map.Add("CoverageEligibilityRequest", Enums.ResourceType.CoverageEligibilityRequest);
      Map.Add("CoverageEligibilityResponse", Enums.ResourceType.CoverageEligibilityResponse);
      Map.Add("DeviceDefinition", Enums.ResourceType.DeviceDefinition);
      Map.Add("EffectEvidenceSynthesis", Enums.ResourceType.EffectEvidenceSynthesis);
      Map.Add("EventDefinition", Enums.ResourceType.EventDefinition);
      Map.Add("Evidence", Enums.ResourceType.Evidence);
      Map.Add("EvidenceVariable", Enums.ResourceType.EvidenceVariable);
      Map.Add("ExampleScenario", Enums.ResourceType.ExampleScenario);
      Map.Add("ImmunizationEvaluation", Enums.ResourceType.ImmunizationEvaluation);
      Map.Add("InsurancePlan", Enums.ResourceType.InsurancePlan);
      Map.Add("Invoice", Enums.ResourceType.Invoice);
      Map.Add("MedicationKnowledge", Enums.ResourceType.MedicationKnowledge);
      Map.Add("MedicinalProduct", Enums.ResourceType.MedicinalProduct);
      Map.Add("MedicinalProductAuthorization", Enums.ResourceType.MedicinalProductAuthorization);
      Map.Add("MedicinalProductContraindication", Enums.ResourceType.MedicinalProductContraindication);
      Map.Add("MedicinalProductIndication", Enums.ResourceType.MedicinalProductIndication);
      Map.Add("MedicinalProductIngredient", Enums.ResourceType.MedicinalProductIngredient);
      Map.Add("MedicinalProductInteraction", Enums.ResourceType.MedicinalProductInteraction);
      Map.Add("MedicinalProductManufactured", Enums.ResourceType.MedicinalProductManufactured);
      Map.Add("MedicinalProductPackaged", Enums.ResourceType.MedicinalProductPackaged);
      Map.Add("MedicinalProductPharmaceutical", Enums.ResourceType.MedicinalProductPharmaceutical);
      Map.Add("MedicinalProductUndesirableEffect", Enums.ResourceType.MedicinalProductUndesirableEffect);
      Map.Add("MolecularSequence", Enums.ResourceType.MolecularSequence);
      Map.Add("ObservationDefinition", Enums.ResourceType.ObservationDefinition);
      Map.Add("OrganizationAffiliation", Enums.ResourceType.OrganizationAffiliation);
      Map.Add("ResearchDefinition", Enums.ResourceType.ResearchDefinition);
      Map.Add("ResearchElementDefinition", Enums.ResourceType.ResearchElementDefinition);
      Map.Add("RiskEvidenceSynthesis", Enums.ResourceType.RiskEvidenceSynthesis);
      Map.Add("ServiceRequest", Enums.ResourceType.ServiceRequest);
      Map.Add("SpecimenDefinition", Enums.ResourceType.SpecimenDefinition);
      Map.Add("SubstanceNucleicAcid", Enums.ResourceType.SubstanceNucleicAcid);
      Map.Add("SubstancePolymer", Enums.ResourceType.SubstancePolymer);
      Map.Add("SubstanceProtein", Enums.ResourceType.SubstanceProtein);
      Map.Add("SubstanceReferenceInformation", Enums.ResourceType.SubstanceReferenceInformation);
      Map.Add("SubstanceSourceMaterial", Enums.ResourceType.SubstanceSourceMaterial);
      Map.Add("SubstanceSpecification", Enums.ResourceType.SubstanceSpecification);
      Map.Add("TerminologyCapabilities", Enums.ResourceType.TerminologyCapabilities);
      Map.Add("VerificationResult", Enums.ResourceType.VerificationResult);

    }

    public Bug.Common.Enums.ResourceType? GetTypeFromName(string name)
    {
      if (Map.ContainsKey(name))
        return Map[name];
      return null;
    }
  }
}


